import{_ as i,c as e,o as s,af as t}from"./chunks/framework.W5ZyBR1w.js";const k=JSON.parse('{"title":"后端快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/backend/intro/getting-started.md","filePath":"zh-cn/backend/intro/getting-started.md"}'),n={name:"zh-cn/backend/intro/getting-started.md"};function l(r,a,h,d,p,o){return s(),e("div",null,[...a[0]||(a[0]=[t('<h1 id="后端快速开始" tabindex="-1">后端快速开始 <a class="header-anchor" href="#后端快速开始" aria-label="Permalink to “后端快速开始”">​</a></h1><p>在开始之前，我们假定您已经:</p><ul><li>熟悉后端开发流程</li><li>熟悉 Java</li><li>熟悉数据库，比如 PostgresQL</li><li>熟悉 Spring全家桶</li><li>熟悉 Mybatis Plus</li><li>熟悉 Java 构建工具，比如 Maven</li></ul><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to “准备”">​</a></h2><p>参考<a href="./environment-setup.html">环境搭建</a>章节</p><h2 id="下载项目" tabindex="-1">下载项目 <a class="header-anchor" href="#下载项目" aria-label="Permalink to “下载项目”">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  https://github.com/lishangbu/orange</span></span></code></pre></div><h2 id="新建数据库" tabindex="-1">新建数据库 <a class="header-anchor" href="#新建数据库" aria-label="Permalink to “新建数据库”">​</a></h2><p>如果搭建数据库时没有指定默认数据库，那么需要手动初始化一个orange的数据库。</p><h2 id="生成jwt密钥对" tabindex="-1">生成JWT密钥对 <a class="header-anchor" href="#生成jwt密钥对" aria-label="Permalink to “生成JWT密钥对”">​</a></h2><p>通过执行scripts下的rsa-key-pair.sh脚本可以生成一对RSA密钥对用于jwt验签。</p><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to “安装依赖”">​</a></h2><p>项目推荐使用maven wrapper进行项目管理:</p><p>在<strong>项目根目录</strong>运行一次以下命令即可自动验证代码并下载jar依赖:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./mvnw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> verify</span></span></code></pre></div><h2 id="启动项目" tabindex="-1">启动项目 <a class="header-anchor" href="#启动项目" aria-label="Permalink to “启动项目”">​</a></h2><p>一切正常的话，此时就可以启动项目了，数据库会在启动时自动创建并完成脚本变更。</p><p>运行 orange-application/orange-admin-server下的AvalonAdminApplication即可。</p><p>默认端口为8080，启动成功后可以通过<code>http://localhost:8080</code>访问项目。</p>',19)])])}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
